# Portal Web Frontend Dockerfile
FROM node:20-alpine AS builder

WORKDIR /app

# Copy package files
COPY portal-web/package*.json ./
COPY portal-web/tsconfig*.json ./
COPY portal-web/vite.config.ts ./

# Install dependencies
RUN npm ci

# Build arguments (must come before copying source)
ARG VITE_API_BASE_URL=http://localhost:8080/api
ARG VITE_RELAY_WS_URL=wss://localhost:5001
ARG VITE_APP_TITLE="RDP Relay Portal"

# Convert ARGs to ENV for build process
ENV VITE_API_BASE_URL=$VITE_API_BASE_URL
ENV VITE_RELAY_WS_URL=$VITE_RELAY_WS_URL
ENV VITE_APP_TITLE=$VITE_APP_TITLE

# Copy source code and environment
COPY portal-web/.env ./
COPY portal-web/src ./src
COPY portal-web/index.html ./
COPY portal-web/public ./public

RUN npm run build

# Production image
FROM nginx:alpine

# Install wget for healthcheck
RUN apk add --no-cache wget

# Copy nginx configuration
COPY infra/nginx/frontend.conf /etc/nginx/conf.d/default.conf

# Copy built application
COPY --from=builder /app/dist /usr/share/nginx/html

# Create directories and set permissions for non-root nginx
RUN mkdir -p /var/cache/nginx /var/run/nginx /var/log/nginx && \
    chown -R nginx:nginx /var/cache/nginx /var/run/nginx /var/log/nginx /usr/share/nginx/html /etc/nginx/conf.d && \
    chmod -R 755 /var/cache/nginx /var/run/nginx /var/log/nginx

# Create custom nginx.conf that doesn't require root privileges
RUN echo 'pid /var/run/nginx/nginx.pid;' > /etc/nginx/nginx.conf && \
    echo 'error_log /var/log/nginx/error.log warn;' >> /etc/nginx/nginx.conf && \
    echo 'events { worker_connections 1024; }' >> /etc/nginx/nginx.conf && \
    echo 'http {' >> /etc/nginx/nginx.conf && \
    echo '    include /etc/nginx/mime.types;' >> /etc/nginx/nginx.conf && \
    echo '    default_type application/octet-stream;' >> /etc/nginx/nginx.conf && \
    echo '    sendfile on;' >> /etc/nginx/nginx.conf && \
    echo '    keepalive_timeout 65;' >> /etc/nginx/nginx.conf && \
    echo '    include /etc/nginx/conf.d/*.conf;' >> /etc/nginx/nginx.conf && \
    echo '}' >> /etc/nginx/nginx.conf

USER nginx

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]
