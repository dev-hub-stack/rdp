#!/bin/bash

# RDP Relay Frontend Testing Guide
# Run this script to get step-by-step frontend testing instructions

set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

print_step() {
    echo -e "\n${BLUE}==>${NC} $1"
}

print_test() {
    echo -e "${YELLOW}üß™ TEST:${NC} $1"
}

print_success() {
    echo -e "${GREEN}‚úÖ${NC} $1"
}

print_info() {
    echo -e "${BLUE}‚ÑπÔ∏è${NC} $1"
}

echo "üß™ RDP Relay Frontend Testing Guide"
echo "===================================="
echo ""

# Step 1: Check if system is running
print_step "Step 1: Checking System Status"

if docker-compose ps | grep -q "Up"; then
    print_success "Local system is running"
    LOCAL_URL="http://localhost:8080"
    echo "Local Portal URL: $LOCAL_URL"
else
    echo "‚ùå Local system is not running. Start with: docker-compose up -d"
    exit 1
fi

# Step 2: Test API connectivity
print_step "Step 2: Testing API Connectivity"

if curl -s http://localhost:8080/api/health > /dev/null; then
    print_success "API is responding"
else
    echo "‚ùå API is not responding"
    exit 1
fi

# Step 3: Open browser for testing
print_step "Step 3: Opening Browser for Testing"

echo "Opening web portal..."
if command -v open > /dev/null; then
    open $LOCAL_URL
elif command -v xdg-open > /dev/null; then
    xdg-open $LOCAL_URL
else
    echo "Please open $LOCAL_URL in your browser"
fi

echo ""
echo "üéØ FRONTEND TESTING CHECKLIST"
echo "=============================="

print_test "1. LOGIN TESTING"
echo "   ‚Ä¢ Navigate to: $LOCAL_URL"
echo "   ‚Ä¢ Email: admin@rdprelay.local"
echo "   ‚Ä¢ Password: admin123"
echo "   ‚Ä¢ Expected: Successful login, redirected to dashboard"
echo ""

print_test "2. GENERATE TOKEN TESTING (Fixed Issue #1)"
echo "   ‚Ä¢ Go to 'Agents' page"
echo "   ‚Ä¢ Click 'Generate Token' button"
echo "   ‚Ä¢ Expected: Token dialog appears (NO 415 error!)"
echo "   ‚Ä¢ Expected: Valid token string is displayed"
echo "   ‚Ä¢ Expected: Expiration time is shown"
echo ""

print_test "3. ADD AGENT TESTING (Fixed Issue #2)"
echo "   ‚Ä¢ On Agents page, click 'Add Agent' button"
echo "   ‚Ä¢ VERIFY these fields are present:"
echo "     ‚úì Agent Name (required)"
echo "     ‚úì Description (optional)"
echo "     ‚úì Machine ID (required) ‚Üê NEW FIELD!"
echo "     ‚úì Machine Name (optional) ‚Üê NEW FIELD!"
echo "     ‚úì IP Address (optional) ‚Üê NEW FIELD!"
echo ""
echo "   ‚Ä¢ Fill out the form:"
echo "     Agent Name: 'Frontend Test Agent'"
echo "     Machine ID: 'FRONTEND-TEST-$(date +%s)'"
echo "     Machine Name: 'Test Desktop'"
echo "     IP Address: '192.168.1.100'"
echo ""
echo "   ‚Ä¢ Click 'Create'"
echo "   ‚Ä¢ Expected: Agent created successfully (NO validation errors!)"
echo "   ‚Ä¢ Expected: Agent appears in list with 'Offline' status"
echo ""

print_test "4. DASHBOARD TESTING"
echo "   ‚Ä¢ Navigate to 'Dashboard'"
echo "   ‚Ä¢ Expected: Statistics show updated agent count"
echo "   ‚Ä¢ Expected: Charts and metrics display properly"
echo "   ‚Ä¢ Expected: No JavaScript errors in console"
echo ""

print_test "5. BROWSER CONSOLE TESTING"
echo "   ‚Ä¢ Open Developer Tools (F12)"
echo "   ‚Ä¢ Check Console tab"
echo "   ‚Ä¢ Expected: No JavaScript errors"
echo "   ‚Ä¢ Expected: No failed API requests"
echo "   ‚Ä¢ Expected: No CORS errors"
echo ""

print_test "6. RESPONSIVE DESIGN TESTING"
echo "   ‚Ä¢ Resize browser window"
echo "   ‚Ä¢ Test mobile view (responsive design)"
echo "   ‚Ä¢ Expected: Layout adapts properly"
echo "   ‚Ä¢ Expected: All functionality works on mobile"
echo ""

print_test "7. CROSS-PAGE NAVIGATION"
echo "   ‚Ä¢ Test navigation between pages:"
echo "     - Dashboard ‚Üí Agents ‚Üí Users ‚Üí Sessions"
echo "   ‚Ä¢ Expected: Smooth transitions"
echo "   ‚Ä¢ Expected: No loading errors"
echo "   ‚Ä¢ Expected: Authentication persists"
echo ""

echo ""
echo "üéâ SUCCESS CRITERIA"
echo "==================="
echo "Your frontend testing is successful when:"
echo "‚úÖ Login works without errors"
echo "‚úÖ Generate Token works (no HTTP 415 error)"
echo "‚úÖ Add Agent form has all required fields"
echo "‚úÖ Add Agent creates successfully (no validation errors)"
echo "‚úÖ Dashboard shows updated statistics"
echo "‚úÖ No JavaScript errors in browser console"
echo "‚úÖ Responsive design works properly"
echo "‚úÖ All page navigation works smoothly"
echo ""

echo "üìä TESTING RESULTS"
echo "=================="
echo "After completing the tests above, document your results:"
echo ""
echo "‚úÖ PASS: Generate Token functionality"
echo "‚úÖ PASS: Add Agent with all fields" 
echo "‚úÖ PASS: Agent creation and listing"
echo "‚úÖ PASS: Dashboard statistics"
echo "‚úÖ PASS: User interface responsiveness"
echo "‚úÖ PASS: Cross-browser compatibility"
echo ""

echo "üîó Additional Testing URLs:"
echo "=========================="
echo "‚Ä¢ Web Portal:     $LOCAL_URL"
echo "‚Ä¢ API Health:     http://localhost:8080/api/health"
echo "‚Ä¢ Direct Web:     http://localhost:3000"
echo "‚Ä¢ API Swagger:    http://localhost:5000/swagger"
echo ""

echo "üí° Tips for Testing:"
echo "==================="
echo "‚Ä¢ Keep browser Developer Tools open (F12)"
echo "‚Ä¢ Check Network tab for API call details"
echo "‚Ä¢ Test with different browsers"
echo "‚Ä¢ Try mobile/responsive view"
echo "‚Ä¢ Test with slow network (throttling)"
echo ""

print_success "Frontend testing guide completed!"
echo "Start testing by opening: $LOCAL_URL"
