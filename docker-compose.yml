services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: rdp-relay-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD:-rdp_relay_admin_2024}
      MONGO_INITDB_DATABASE: rdp_relay
    volumes:
      - mongodb_data:/data/db
      - ./infra/mongodb/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - rdp-relay-network

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: rdp-relay-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD:-rdp_relay_redis_2024}
    volumes:
      - redis_data:/data
    networks:
      - rdp-relay-network

  # Portal API
  portal-api:
    build:
      context: .
      dockerfile: ./infra/docker/Dockerfile.portal-api
    container_name: rdp-relay-portal-api
    restart: unless-stopped
    ports:
      - "5000:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
      - MongoDB__ConnectionString=mongodb://admin:${MONGODB_PASSWORD:-rdp_relay_admin_2024}@mongodb:27017/rdp_relay?authSource=admin
      - MongoDB__DatabaseName=rdp_relay
      - Redis__ConnectionString=redis:6379,password=${REDIS_PASSWORD:-rdp_relay_redis_2024}
      - Jwt__SecretKey=${JWT_SECRET_KEY:-your-super-secret-jwt-key-change-this-in-production}
      - Jwt__Issuer=RdpRelayPortal
      - Jwt__Audience=RdpRelayPortal
      - Jwt__ExpirationMinutes=60
      - Jwt__RefreshExpirationDays=7
      - Portal__RequireHttps=false
      - Portal__CorsOrigins__0=http://localhost:3000
      - Portal__CorsOrigins__1=http://localhost:8080
      - Portal__CorsOrigins__2=http://192.168.18.101:8080
      - Portal__CorsOrigins__3=http://192.168.18.101:3000
    depends_on:
      - mongodb
      - redis
    networks:
      - rdp-relay-network
    volumes:
      - ./logs/portal-api:/app/logs

  # Relay Server
  relay-server:
    build:
      context: .
      dockerfile: ./infra/docker/Dockerfile.relay
    container_name: rdp-relay-server
    restart: unless-stopped
    ports:
      - "5001:8080"  # HTTP/WebSocket port
      - "9443:8443"  # TCP relay port (changed to 9443)
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080;https://+:8443
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/app/certs/relay.pfx
      - ASPNETCORE_Kestrel__Certificates__Default__Password=${CERT_PASSWORD:-rdp_relay_cert_2024}
      - Relay__TcpPort=8443
      - Relay__JwtSecretKey=${JWT_SECRET_KEY:-your-super-secret-jwt-key-change-this-in-production}
      - Relay__JwtIssuer=RdpRelayPortal
      - Relay__JwtAudience=RdpRelayRelay
    depends_on:
      - portal-api
    networks:
      - rdp-relay-network
    volumes:
      - ./logs/relay:/app/logs
      - ./infra/certs:/app/certs:ro

  # Portal Web Frontend  
  portal-web:
    build:
      context: .
      dockerfile: ./infra/docker/Dockerfile.portal-web
    container_name: rdp-relay-portal-web
    restart: unless-stopped
    ports:
      - "3000:80"
    environment:
      - VITE_API_BASE_URL=/api
      # WebSocket for real-time updates - not yet implemented
      # - VITE_RELAY_WS_URL=ws://192.168.18.101:5001
    depends_on:
      - portal-api
    networks:
      - rdp-relay-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  # Reverse Proxy (nginx)
  nginx:
    image: nginx:alpine
    container_name: rdp-relay-nginx
    restart: unless-stopped
    ports:
      - "8080:80"   # HTTP (changed from 80)
      - "8443:443"  # HTTPS (changed from 443)
    volumes:
      - ./infra/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./infra/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./infra/certs:/etc/nginx/certs:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      portal-web:
        condition: service_healthy
      portal-api:
        condition: service_started
      relay-server:
        condition: service_started
    networks:
      - rdp-relay-network

networks:
  rdp-relay-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
